{"version":3,"file":"static/js/443.99b8283e.chunk.js","mappings":"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","sources":["hoc/withAuthRedirect.js","components/Dialogs/AddMessageForm/AddMessageForm.js","webpack://01-first-projects/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\nexport const withAuthRedirect  = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n  }","import { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/preloader/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength50= maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"dialog-add-message-form\" })(\r\n  AddMessageForm\r\n);","// extracted by mini-css-extract-plugin\nexport default {\"Dialogs\":\"Dialogs_Dialogs__fCrmi\",\"DialogsItems\":\"Dialogs_DialogsItems__69oP6\",\"active\":\"Dialogs_active__2J78I\",\"Messages\":\"Dialogs_Messages__Zl+Fl\",\"Message\":\"Dialogs_Message__WQ4Gd\"};","import { Navigate, NavLink } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../common/preloader/FormsControls/FormsControls\";\r\nimport AddMessageForm, { AddMessageFormRedux } from \"./AddMessageForm/AddMessageForm\";\r\n\r\nimport s from \"./Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.Dialog + \" \" + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.Message}>{props.Message}</div>;\r\n};\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let DialogsElements = state.Dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n  let MessagesElements = state.Messages.map((m) => (\r\n    <Message Message={m.message} key={m.id} />\r\n  ));\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) return <Navigate to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={s.Dialogs}>\r\n      <div className={s.DialogsItems}>{DialogsElements}</div>\r\n\r\n      <div className={s.Messages}>\r\n        <div>{MessagesElements}</div>\r\n      </div>\r\n      <AddMessageForm onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Dialogs;\r\n","\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n  sendMessageCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n      dialogsPage: state.dialogsPage,\r\n      \r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","maxLength50","maxLengthCreator","reduxForm","form","props","_jsxs","onSubmit","handleSubmit","children","_jsx","Field","component","Textarea","validate","required","name","placeholder","DialogItem","path","id","className","s","NavLink","to","Message","dialogsPage","DialogsElements","Dialogs","map","d","MessagesElements","Messages","m","message","newMessageBody","AddMessageForm","values","sendMessage","Navigate","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","React"],"sourceRoot":""}