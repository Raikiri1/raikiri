{"version":3,"file":"static/js/401.984d48bf.chunk.js","mappings":"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","sources":["webpack://01-first-projects/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://01-first-projects/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://01-first-projects/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainor.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__1Ii05\",\"posts\":\"MyPosts_posts__4+WYZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__PDuoT\"};","import s from './Post.module.css';\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n        <img src='https://avatarko.ru/img/kartinka/1/ledyanoj_drakon.jpg' />\r\n        {props.message}\r\n        <div className={s.Post}>\r\n          <span>Like</span>  {props.Likescaunt}              \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/preloader/FormsControls/FormsControls\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n  \r\n  let PostsElements = \r\n  [...props.posts]\r\n  .reverse()\r\n  .map((p) => (\r\n    <Post message={p.message} likescaunt={p.likescaunt} />\r\n  ));\r\n\r\n  \r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{PostsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n          placeholder={\"Post Message\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nlet AddNewPostFormRedux = reduxForm({\r\n  form: \"ProfileAddNewPost\",\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","import { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.Posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost:(newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsConteiner = connect (mapStateToProps,mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsConteiner;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__aaay1\"};","import Preloader from \"../../common/preloader/preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status\r\n  };\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true\r\n    });\r\n  };\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n  onStatusChange = (e) => {\r\n          this.setState({\r\n            status: e.currentTarget.value\r\n          });\r\n          \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span onDoubleClick={this.activateEditMode}>\r\n              {this.props.status || \"-----\"}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input  onChange={this.onStatusChange}\r\n              autoFocus={true}\r\n              onBlur={this.deactivateEditMode}\r\n              value={this.state.status}\r\n            ></input>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ProfileStatus;\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect ( () => {\r\n   setStatus(props.status) \r\n }, [props.status] )\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"-----\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from \"../../common/preloader/preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src=\"https://avatars.mds.yandex.net/i?id=f087e3f9bee955bc71551edd050c977080875cb6-8280929-images-thumbs&n=13\" />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div >\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer  />\r\n    </div>)\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport {  Navigate, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\n  \r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authhorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    \r\n    return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authhorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n}); \r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["props","_jsx","children","_jsxs","className","s","src","message","Likescaunt","maxLength10","maxLengthCreator","MyPosts","React","PostsElements","_toConsumableArray","posts","reverse","map","p","Post","likescaunt","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","connect","state","profilePage","Posts","dispatch","addPostActionCreator","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","_ref","profile","photos","large","ProfileStatusWithHooks","Preloader","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","router","params","authhorizedUserId","getUserProfile","getStatus","Profile","_objectSpread","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}