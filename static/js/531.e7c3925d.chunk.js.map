{"version":3,"file":"static/js/531.e7c3925d.chunk.js","mappings":"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","sources":["webpack://01-first-projects/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://01-first-projects/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://01-first-projects/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainor.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__1Ii05\",\"posts\":\"MyPosts_posts__4+WYZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__PDuoT\"};","import s from './Post.module.css';\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n        <img src='https://avatarko.ru/img/kartinka/1/ledyanoj_drakon.jpg' />\r\n        {props.message}\r\n        <div className={s.Post}>\r\n          <span>Like</span>  {props.Likescaunt}              \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/preloader/FormsControls/FormsControls\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let PostsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p,index) => <Post key={p.id + '_' + index}message={p.message} likescaunt={p.likescaunt} />);\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{PostsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n          placeholder={\"Post Message\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({\r\n  form: \"ProfileAddNewPost\",\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","import { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.Posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost:(newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsConteiner = connect (mapStateToProps,mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsConteiner;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__aaay1\",\"mainPhoto\":\"ProfileInfo_mainPhoto__OQYTP\",\"contact\":\"ProfileInfo_contact__99be1\"};","import s from \"./ProfileInfo.module.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect ( () => {\r\n   setStatus(props.status) \r\n }, [props.status] )\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <b>Status:</b> <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"-----\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from \"../../common/preloader/preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status\r\n  };\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true\r\n    });\r\n  };\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false\r\n    });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n  onStatusChange = (e) => {\r\n          this.setState({\r\n            status: e.currentTarget.value\r\n          });\r\n          \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span onDoubleClick={this.activateEditMode}>\r\n              {this.props.status || \"-----\"}\r\n            </span>\r\n          </div>\r\n        )}\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input  onChange={this.onStatusChange}\r\n              autoFocus={true}\r\n              onBlur={this.deactivateEditMode}\r\n              value={this.state.status}\r\n            ></input>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ProfileStatus;\r\n","import { reduxForm } from \"redux-form\";\r\nimport {\r\n  Input,\r\n  Textarea,\r\n  createField,\r\n} from \"../../common/preloader/FormsControls/FormsControls\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport styles from \"../../common/preloader/FormsControls/FormsControls.module.css\"\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div><button>save</button></div>\r\n      {error && <div className={styles.formSummaryError}>\r\n        {error}\r\n        </div>}\r\n      <div>\r\n        <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>:{\" \"}\r\n        {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n      <div>\r\n        <b>My professional skills</b>:{\" \"}\r\n        {createField(\r\n          \"My professional skills\",\r\n          \"lookingForAJobDescription\",\r\n          [],\r\n          Textarea\r\n        )}\r\n      </div>\r\n      <div>\r\n        <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return <div key={key} className={s.contact}> \r\n          <b>{key}:{createField(key, \"contacts.\" + key, [], Input)}</b>\r\n          </div>\r\n           \r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'}) (ProfileDataForm)\r\nexport default ProfileDataFormReduxForm;\r\n","import Preloader from \"../../common/preloader/preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../asers/images/user.png\";\r\nimport { useState } from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false);\r\n      }\r\n    )\r\n    \r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src=\"https://avatars.mds.yandex.net/i?id=f087e3f9bee955bc71551edd050c977080875cb6-8280929-images-thumbs&n=13\" />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n        { editMode \r\n         ?<ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n         :<ProfileData goToEditMode={() => {setEditMode(true);}} profile={profile} isOwner={isOwner}/>\r\n        }\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full name</b>:{profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>:{profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professial skills</b>:{profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me</b>:{profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport {\r\n  Navigate,\r\n  useLocation,\r\n  useNavigate,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { savePhoto ,saveProfile } from './../../redux/profile-reducer';\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userID = this.props.router.params.userID;\r\n    if (!userID) {\r\n      userID = this.props.authorizedUserId;\r\n      if(!userID){\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userID);\r\n    this.props.getStatus(userID);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.router.params.userID !== this.props.router.params.userID) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.router.params.userID}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"names":["props","_jsx","children","_jsxs","className","s","src","message","Likescaunt","maxLength10","maxLengthCreator","MyPosts","React","PostsElements","_toConsumableArray","posts","reverse","map","p","index","Post","likescaunt","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","connect","state","profilePage","Posts","dispatch","addPostActionCreator","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","_ref","profile","error","styles","createField","Input","type","Object","keys","contacts","key","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","_ref3","savePhoto","saveProfile","Preloader","photos","large","userPhoto","target","files","length","ProfileDataForm","initialValues","formData","then","ProfileStatusWithHooks","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","userID","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","Profile","_objectSpread","compose","auth","userId","isAuth","Component","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}